# PLUS_FLAGS = -fsanitize=address,leak,undefined -Wall -Wextra -Wshadow -Wdouble-promotion -Wundef -Wconversion
ARGS ?= -pas
CC = gcc
EXEC = http_parse
DEBUG = yes
CFLAGS = -Wall -Wextra -O2 -ansi -std=c99  
#  -pedantic   -fsanitize=address,leak,undefined
STATICDEFINE = 
# TEST
lib = 

OBJDIR = obj
SRCDIR = src
INCDIR = includes
LIBDIR = lib
RESULTDIR = out
DATADIR = data
MAIN = main
# MAIN = test

D ?= 

SRCS=$(wildcard $(SRCDIR)/*.c $(SRCDIR2)/*.c)
OBJS= $(SRCS:$(SRCDIR)/%.c=$(OBJDIR)/%.o)
HEADER =$(wildcard $(INCDIR)/*.h)

CFLAGS += $(foreach headerdir,$(INCDIR),-I$(headerdir)) 
CFLAGS += $(foreach librarydir,$(LIBDIR),-L$(librarydir))
CFLAGS += $(foreach library,$(lib),-l$(library))
CFLAGS += $(foreach defined,$(D),-D$(defined))

ifeq ($(DEBUG),yes)
	CFLAGS += -g
	CFLAGS += $(foreach defined,$(STATICDEFINE),-D$(defined))
endif


$(EXEC):$(OBJS) $(HEADER)
	@mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) $(OBJS) -o $@


$(OBJDIR)/%.o: $(SRCDIR)/%.c $(HEADER)
	@mkdir -p $(OBJDIR)
	$(CC) $(CFLAGS) -o $@ -c $< 

.PHONY: clean run create debug tests doc filespas files pasapas test-cli

dev: clean $(EXEC) run

dev_main: clean $(EXEC) run_main

clean:
	@echo $(SRCS)
	@echo $(OBJS)
	@rm -rf $(OBJDIR) $(EXEC) $(RESULTDIR)

run: $(EXEC)
	@./$(EXEC) $(ARGS)

valgrind: $(EXEC)
	@mkdir -p $(RESULTDIR)
	valgrind --track-origins=yes --leak-check=full ./$(EXEC) tests/testFile/test0.txt $(RESULTDIR)/bin $(RESULTDIR)/stdout -pas

create: $(EXEC)
	@mkdir -p {$(DATADIR),$(SRCDIR),$(INCDIR),$(LIBDIR),$(LIBDIR),$(RESULTDIR)}

tests: $(EXEC)
	@./tests.sh

doc:
	doxygen doxy_config
